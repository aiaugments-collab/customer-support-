version: '3'

services:
  base: &base
    image: chatwoot/chatwoot:latest
    env_file: .env ## Change this file for customized env variables
    volumes:
      - storage_data:/app/storage

  db_migrate:
    <<: *base
    depends_on:
      - redis
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    entrypoint: docker/entrypoints/rails.sh
    command: ['bundle', 'exec', 'rails', 'db:chatwoot_prepare']
    restart: "no"
    healthcheck:
      test: ["CMD", "echo", "Migration completed"]
      interval: 30s
      timeout: 10s
      retries: 1
      start_period: 60s

  rails:
    <<: *base
    depends_on:
      redis:
        condition: service_started
      db_migrate:
        condition: service_completed_successfully
    ports:
      - '3001:3000'
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    entrypoint: docker/entrypoints/rails.sh
    command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']
    restart: always

  sidekiq:
    <<: *base
    depends_on:
      redis:
        condition: service_started
      db_migrate:
        condition: service_completed_successfully
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']
    restart: always

  # Using external PostgreSQL (Neon), so no local postgres service needed

  redis:
    image: redis:alpine
    restart: always
    command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
    env_file: .env
    volumes:
      - redis_data:/data
    ports:
      - '127.0.0.1:6379:6379'

volumes:
  storage_data:
  redis_data:
